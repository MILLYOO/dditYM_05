<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.buy.incoming.dao.IncomingDAO">
	<!-- ###입고처리서 순서대로### -->
	<sql id="orderByInc">
		ORDER BY INC_NUM
	</sql>
	<!-- 발주서 순서대로 -->
	<sql id="orderByOrd">
		ORDER BY ORD_NUM
	</sql>
	
	<!--    새로운 문서 체크 -->
   <insert id="insertCheck" parameterType="IncomingVO">
		INSERT INTO DOC_CHECK
		VALUES(#{incNum},'N',SYSDATE)
	</insert>


	<sql id="searchFrag">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="dateStart neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(dateStart)">
                <![CDATA[
                   INC_DATE BETWEEN TO_DATE(#{dateStart}, 'YYYY-MM-DD') AND TO_DATE(#{dateEnd}, 'YYYY-MM-DD')+0.99999
                ]]>
				</if>
				<if
					test="@org.apache.commons.lang3.StringUtils@isNotEmpty(prodName)">
					AND INSTR(PROD_NAME, #{prodName}) > 0
				</if>
				<if
					test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(empName)">
					AND INSTR(EMP_NAME, #{empName}) > 0
				</if>
				<if
					test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(warName)">
					AND INSTR(WAR_NAME, #{warName}) > 0
				</if>
				<if
					test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deptName)">
					AND INSTR(DEPT_NAME, #{deptName}) > 0
				</if>
				<if
					test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(buyerName)">
					AND INSTR(BUYER_NAME, #{buyerName}) > 0
				</if>
				<if
					test="@org.apache.commons.lang3.StringUtils@isNotEmpty(finishYN)">
					AND INSTR(FINISH_YN, #{finishYN}) > 0
				</if>
			</if>
		</trim>
	</sql>

<sql id="searchFragIo">
       <trim prefix="WHERE" prefixOverrides="AND">
          <if test="ioStartDate neq null">
             <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(ioStartDate)">
                <![CDATA[
                 ORD_DATE BETWEEN TO_DATE(#{ioStartDate}, 'YYYY-MM-DD') AND TO_DATE(#{ioEndDate}, 'YYYY-MM-DD')+0.99999
                ]]>
             </if>
             <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(buyerName)">
             	<![CDATA[
            	 AND INSTR(BUYER_NAME, #{buyerName}) > 0
                ]]>
             </if>
             <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(ordNum)">
             	<![CDATA[
                 AND INSTR(ORD_NUM, #{ordNum}) > 0
                ]]>
             </if>
          </if>      
       </trim>
   </sql>


	<!-- 입고처리서 리스트 조회 -->
	<select id="selectIncomingList" parameterType="HubSearchVO" resultType="IncomingVO">
		SELECT INC_NUM
			  ,TO_CHAR(INC_DATE,'YYYY') AS BUY_YY
			  ,TO_CHAR(INC_DATE,'MM') AS BUY_MM
			  ,TO_CHAR(INC_DATE,'DD') AS BUY_DD
			  ,BUYER_CODE
			  ,BUYER_NAME
			  ,DEPT_NAME
			  ,EMP_NAME
			  ,INC_VAT
			  ,INC_RESULT
			  ,INC_FINISH
		  FROM INCOMING
		<include refid="searchFrag" />
		<include refid="orderByInc" />
	</select>

	<!-- 입고처리서 원자재 리스트 조회 -->
	<select id="selectIncomingRawsList" parameterType="IncomingVO" resultType="IncomingRawsVO">
		SELECT INC_NO
		 	  ,ICODE_NAME
              ,INC_NUM
              ,RAWS_CODE
              ,RAWS_NAME
              ,GCOMM_NAME
              ,UCOMM_NAME
              ,TO_CHAR(IR_DATE,'YYMMDD') AS IR_DATE
              ,IR_QTY
              ,WAR_NAME
              ,IR_UPRICE
              ,IR_SP
              ,IR_VAT
              ,IR_SUMCOST
              ,PROJ_NAME
         FROM INCOMING_RAWS     
		WHERE INC_NUM=#{incNum}
		ORDER BY INC_NO
	</select>

	<!-- 입고처리 선택 -->
	<select id="selectIncoming" parameterType="IncomingVO" resultType="IncomingVO">
		 SELECT INC_NUM
		       ,INC_DATE
		       ,BUYER_CODE
		       ,BUYER_NAME
		       ,DEPT_NAME
		       ,EMP_NAME
		       ,INC_VAT
		       ,INC_RESULT
		       ,INC_FINISH
		FROM INCOMING
		WHERE INC_NUM=#{incNum}
	</select>

	<!-- 원자재 선택 -->
	<select id="selectIncomingRaws" parameterType="IncomingRawsVO"
		resultType="IncomingRawsVO">
		SELECT INC_NO
              ,INC_NUM
              ,RAWS_CODE
              ,RAWS_NAME
              ,GCOMM_NAME
              ,UCOMM_NAME
              ,IR_DATE
              ,IR_QTY
              ,WAR_NAME
              ,IR_UPRICE
              ,IR_SP
              ,IR_VAT
              ,IR_SUMCOST
              ,ORD_NUM
              ,PROJ_NAME
              ,ICODE_NAME
		FROM INCOMING_RAWS
		WHERE INC_NO=#{incNo}
	</select>

	<!-- 입고처리서 등록 -->
	<insert id="insertIncoming" parameterType="IncomingVO">
		<selectKey resultType="String" keyProperty="incNum" order="BEFORE">
			SELECT 'IC'||TO_CHAR(SYSDATE,'YYMMDD')||LPAD(TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(INC_NUM,9,10))),0)+ 1),2,0)
			  FROM INCOMING
			 WHERE SUBSTR(INC_NUM,1,8)='IC'||TO_CHAR(SYSDATE,'YYMMDD')
		</selectKey>
		INSERT INTO INCOMING (
				     INC_DATE
				    ,INC_NUM
				    ,BUYER_CODE
				    ,BUYER_NAME
				    ,DEPT_NAME
				    ,EMP_NAME
				    ,INC_VAT
				    ,INC_RESULT
				    ,INC_FINISH
		    ) VALUES (
		             TO_DATE(#{incDate,jdbcType=VARCHAR},'YYYY-MM-DD')
		           , #{incNum,jdbcType=VARCHAR}
		           , #{buyerCode,jdbcType=NUMERIC}
		           , #{buyerName,jdbcType=VARCHAR}
		           , #{deptName,jdbcType=VARCHAR}
		           , #{empName,jdbcType=VARCHAR}
		           , #{incVat,jdbcType=VARCHAR}
		           , #{incResult,jdbcType=VARCHAR}
		           , #{incFinish,jdbcType=VARCHAR}
		    )
	</insert>

	<!-- 입고처리서 원자재 등록 -->
	<insert id="insertIncomingRaws" parameterType="IncomingRawsVO">
		<selectKey resultType="int" keyProperty="incNo" order="BEFORE">
			SELECT NVL(MAX(INC_NO),0) + 1
			FROM INCOMING_RAWS
		</selectKey>
		INSERT INTO INCOMING_RAWS (
			 INC_NO
            ,INC_NUM
            ,RAWS_CODE
            ,RAWS_NAME
            ,GCOMM_NAME
            ,UCOMM_NAME
            ,IR_DATE
            ,IR_QTY
            ,WAR_NAME
            ,IR_UPRICE
            ,IR_SP
            ,IR_VAT
            ,IR_SUMCOST
            ,ORD_NUM
            ,PROJ_NAME
            ,ICODE_NAME
		) VALUES (
		  #{incNo,jdbcType=NUMERIC}
		, #{incNum,jdbcType=VARCHAR}
		, #{rawsCode,jdbcType=VARCHAR}
		, #{rawsName,jdbcType=VARCHAR}
		, #{gcommName,jdbcType=VARCHAR}
		, #{ucommName,jdbcType=VARCHAR}
		, TO_DATE(#{irDate,jdbcType=DATE},'YYYY/MM/DD')
		, #{irQty,jdbcType=NUMERIC}
		, #{warName,jdbcType=VARCHAR}
		, #{irUprice,jdbcType=NUMERIC}
		, #{irSp,jdbcType=NUMERIC}
		, #{irVat,jdbcType=NUMERIC}
		, #{irSumcost,jdbcType=NUMERIC}
		, #{ordNum,jdbcType=VARCHAR}
		, #{projName,jdbcType=VARCHAR}
		, #{icodeName,jdbcType=VARCHAR}
		)
	</insert>

	<update id="updateIncoming" parameterType="IncomingVO">
		UPDATE INCOMING
		  SET INC_NUM=#{incNum,jdbcType=VARCHAR}
			, INC_DATE=#{incDate,jdbcType=VARCHAR}
			, BUYER_CODE=#{buyerCode,jdbcType=NUMERIC}
			, BUYER_NAME=#{buyerName,jdbcType=VARCHAR}
			, DEPT_NAME=#{deptName,jdbcType=VARCHAR}
			, EMP_NAME=#{empName,jdbcType=VARCHAR}
			, INC_VAT=#{incVat,jdbcType=NUMERIC}
			, INC_RESULT=#{incResult,jdbcType=VARCHAR}
			, INC_FINISH=#{incFinish,jdbcType=VARCHAR}
		WHERE INC_NUM=#{incNum}
	</update>

	<update id="updateIncomingRaws" parameterType="IncomingRawsVO">
		UPDATE INCOMING_RAWS
		SET
		 RAWS_CODE=#{rawsCode,jdbcType=VARCHAR}
		,RAWS_NAME=#{rawsName,jdbcType=VARCHAR}
		,IR_DATE=#{irDate,jdbcType=DATE}
		,IR_QTY=#{irQty,jdbcType=NUMERIC}
		,WAR_NAME=#{warName,jdbcType=VARCHAR}
		,IR_UPRICE=#{irUprice,jdbcType=NUMERIC}
		,IR_SP=#{irSp,jdbcType=NUMERIC}
		,IR_VAT=#{irVat,jdbcType=NUMERIC}
		,IR_SUMCOST=#{irSumcost,jdbcType=NUMERIC}
		,ORD_NUM=#{ordNum,jdbcType=VARCHAR}
		WHERE INC_NO=#{incNo}
	</update>

	<!-- 입고처리서 삭제 -->
	<delete id="deleteIncoming" parameterType="IncomingVO">
		DELETE FROM INCOMING
		WHERE INC_NUM=#{incNum}
	</delete>


	<delete id="deleteIncomingRaws" parameterType="IncomingRawsVO">
		DELETE FROM
		INCOMING_RAWS
		WHERE INC_NO=#{incNo}
	</delete>

	<delete id="deleteAllIncRaws" parameterType="String">
		DELETE FROM INCOMING_RAWS
		 WHERE INC_NUM=#{incNum}
	</delete>
	
	
	<!-- 입고처리서 : 발주서 목록 조회 -->
	<select id="selectOrderListForInc" parameterType="HubSearchVO" resultType="OrderVO">
		SELECT ORD_NUM
              ,TO_CHAR(ORD_DATE,'YYYY-MM-DD') as ORD_DATE
              ,BUYER_CODE
              ,BUYER_NAME
              ,DEPT_NAME
              ,EMP_NAME
              ,ORD_VAT
              ,ORD_RESULT
              ,ORD_FINISH
         FROM "ORDER"
         <include refid="searchFragIo"></include>
         <include refid="orderByOrd"></include>
	</select>
	
	<!-- 입고처리서 : 발주서 - 원자재 목록 조회 -->
	<select id="selectOrderRawsListforInc" parameterType="OrderVO" resultType="OrderRawsVO">
		SELECT ORD_NO
			  ,ICODE_NAME
              ,ORD_NUM
              ,RAWS_CODE
              ,RAWS_NAME
              ,GCOMM_NAME
              ,UCOMM_NAME
              ,TO_CHAR(ORR_DATE, 'YYYY/MM/DD') AS ORR_DATE
              ,ORR_QTY
              ,ORR_UPRICE
              ,ORR_SP
              ,ORR_VAT
              ,ORR_SUMCOST
              ,PROJ_NAME
              ,ICODE_NAME
         FROM ORDER_RAWS
         WHERE ORD_NUM=#{ordNum}
	</select>
	
	<!-- 발주서 존재 여부 -->
	<select id="selectOrderForInc" parameterType="OrderVO" resultType="OrderVO">
		SELECT ORD_NUM
              ,ORD_DATE
              ,BUYER_CODE
              ,BUYER_NAME
              ,DEPT_NAME
              ,EMP_NAME
              ,ORD_VAT
              ,ORD_RESULT
              ,ORD_FINISH
         FROM "ORDER"
         WHERE ORD_NUM=#{ordNum}
	</select>	
	
	<!-- 발주서 - 원자재 존재 여부 -->
	<select id="selectOrderRawsForInc" parameterType="OrderRawsVO" resultType="OrderRawsVO">
		SELECT ORD_NO
              ,ORD_NUM
              ,RAWS_CODE
              ,RAWS_NAME
              ,GCOMM_NAME
              ,UCOMM_NAME
              ,ORR_DATE
              ,ORR_QTY
              ,ORR_UPRICE
              ,ORR_SP
              ,ORR_VAT
              ,ORR_SUMCOST
              ,PROJ_NAME
              ,ICODE_NAME
         FROM ORDER_RAWS
         WHERE ORD_NUM=#{ordNum}
           AND ORD_NO=#{ordNo}
	</select>
	
	
	
	<!-- 품목 수량 업데이트 쿼리 -->
	
	<!--  RAWS(원자재 및 반제품) 테이블 수량 증가 -->
	<update id="updateRawsEnter" parameterType="IncomingRawsVO">
		UPDATE RAWS
		SET RAWS_QTY = RAWS_QTY + #{irQty}
		WHERE RAWS_CODE = #{itemCode}
	</update>
	
	<!-- 원자재-창고 수량 증가 -->
	<update id="updateWarRawsEnter" parameterType="IncomingRawsVO">
		UPDATE WAR_RAW
		SET WR_QTY = WR_QTY + #{irQty}
		WHERE RAW_CODE = #{itemCode}
		AND WAR_CODE = (SELECT WAR_CODE
		                FROM WAREHOUSE
		                WHERE WAR_NAME = #{warName})
	</update>
	
	<!-- 원재료 테이블 수량 증가(입고) -->
	<update id="deleteRawsEnter" parameterType="IncomingRawsVO">
		UPDATE RAWS
		SET RAWS_QTY = RAWS_QTY - #{irQty}
		WHERE RAWS_CODE = #{itemCode}
	</update>
	<!-- 원재료-창고 테이블 수량 증가(입고) -->
	<update id="deleteWarRawsEnter" parameterType="IncomingRawsVO">
		UPDATE WAR_RAW
		SET WR_QTY = WR_QTY - #{irQty}
		WHERE RAW_CODE = #{itemCode}
		AND WAR_CODE = (SELECT WAR_CODE
		                FROM WAREHOUSE
		                WHERE WAR_NAME = #{warName})
	</update>
</mapper>