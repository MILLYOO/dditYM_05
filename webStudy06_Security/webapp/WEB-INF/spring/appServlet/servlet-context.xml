<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
		<context:include-filter type="annotation" expression="kr.or.ddit.annotations.ViewPreparer"/>
	</context:component-scan>
	
	<!-- argument-resolvers : @AuthenticationPrincipal을 사용하기 위한 어노테이션 추가 -->
	<annotation-driven validator="validator">
		<argument-resolvers>
			<beans:bean class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
		</argument-resolvers>
	</annotation-driven>
	
																															<!-- 검증 관련 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basenames="kr.or.ddit.msgs.errorMessage,kr.or.ddit.msgs.message" 
	/><!-- 베이스경로는 클래스패스 이후 경로부터, /을 .으로, 확장자는 제거 -->
	
	<beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
		p:validationMessageSource-ref="messageSource"
	/> <!-- 핸들러 어댑터가 써야하기에 annotation-driven에다가 validator을 추가한다. -->
																															<!-- 검증 관련 종료 -->
																															
	<!-- 뷰리졸버 -->																		
	<!-- InternalResourceViewResolver은 독불장군같은 녀석이라 order를 맨 마지막에 넣어야한다 --> 													
	<beans:bean id="IRVR" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/views/"
		p:suffix=".jsp"
	/>
	
	<beans:bean id="downloadView" class="kr.or.ddit.board.view.downloadView" />							
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" 
		p:order="1"
	/>
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"
		p:definitions="/WEB-INF/tiles/*-definitions.xml"
		p:preparerFactoryClass="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory"
	/>
	
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" 
		p:order="2"
	/>
																														
	<resources location="/resources/" mapping="/resources/**" cache-period="0"></resources>
	
	<!-- 아이디가 소문자m으로 시작해야한다. -> 이것은 adapter가 주입받기 위해 정해진 원칙이다. ds -> multipartResolver에서 wrapping -> adapter -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" 
		p:maxInMemorySize="#{10*1024}"
		p:maxUploadSize="#{50*1024*1025}"
		p:maxUploadSizePerFile="#{3*1024*1024}"
	/>
	
	<!-- 언어변경에 대한 설정-->
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		p:cookieName="languageCookie"
		p:cookieMaxAge="#{60*60*24*7}"
		p:cookiePath="/"
	/>
	<interceptors>
			<!-- 모든 요청에 인터셉터를 이용하여 처리하겠다. <interceptor> 생략 가능 -->
			<!-- LocaleResolver -->
			<beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" 
				p:paramName="language"
			/>		
	</interceptors>
</beans:beans>
